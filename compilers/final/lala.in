
Started

CODE OK!

     1:  unit, prime, -, -
     2:  <, n, 0, 4
     3:  jump, -, -, 15
     4:  um, n, -, n
     5:  par, n, V, -
     6:  par, $1, RET, -
     7:  call, -, -, prime
     8:  ifb, $1, -, 10
     9:  jump, -, -, 12
    10:  retv, true, -, -
    11:  ret, -, -, -
    12:  retv, false, -, -
    13:  ret, -, -, -
    14:  jump, -, -, 54
    15:  <, n, 2, 17
    16:  jump, -, -, 23
    17:  jump, -, -, 20
    18:  retv, true, -, -
    19:  ret, -, -, -
    20:  retv, false, -, -
    21:  ret, -, -, -
    22:  jump, -, -, 54
    23:  =, n, 2, 25
    24:  jump, -, -, 31
    25:  jump, -, -, 26
    26:  retv, true, -, -
    27:  ret, -, -, -
    28:  retv, false, -, -
    29:  ret, -, -, -
    30:  jump, -, -, 54
    31:  jump, -, -, 32
    32:  :=, 3, -, i
    33:  /, n, 2, $2
    34:  <=, i, $2, 36
    35:  jump, -, -, 48
    36:  %, n, i, $3
    37:  =, $3, 0, 39
    38:  jump, -, -, 45
    39:  jump, -, -, 42
    40:  retv, true, -, -
    41:  ret, -, -, -
    42:  retv, false, -, -
    43:  ret, -, -, -
    44:  jump, -, -, 45
    45:  +, i, 2, $4
    46:  :=, $4, -, i
    47:  jump, -, -, 33
    48:  jump, -, -, 49
    49:  retv, true, -, -
    50:  ret, -, -, -
    51:  retv, false, -, -
    52:  ret, -, -, -
    53:  jump, -, -, 54
    54:  endu, prime, -, -
    55:  unit, _main, -, -
    56:  par, "Limit: ", V, -
    57:  call, -, -, prints
    58:  par, $1, RET, -
    59:  call, -, -, readi
    60:  :=, $1, -, limit
    61:  par, "Primes:\n", V, -
    62:  call, -, -, prints
    63:  :=, 0, -, counter
    64:  >=, limit, 2, 66
    65:  jump, -, -, 73
    66:  +, counter, 1, $2
    67:  :=, $2, -, counter
    68:  par, 2, V, -
    69:  call, -, -, printi
    70:  par, "\n", V, -
    71:  call, -, -, prints
    72:  jump, -, -, 73
    73:  >=, limit, 3, 75
    74:  jump, -, -, 82
    75:  +, counter, 1, $3
    76:  :=, $3, -, counter
    77:  par, 3, V, -
    78:  call, -, -, printi
    79:  par, "\n", V, -
    80:  call, -, -, prints
    81:  jump, -, -, 82
    82:  :=, 6, -, number
    83:  <=, number, limit, 85
    84:  jump, -, -, 118
    85:  -, number, 1, $4
    86:  par, $4, V, -
    87:  par, $5, RET, -
    88:  call, -, -, prime
    89:  ifb, $5, -, 91
    90:  jump, -, -, 99
    91:  +, counter, 1, $6
    92:  :=, $6, -, counter
    93:  -, number, 1, $7
    94:  par, $7, V, -
    95:  call, -, -, printi
    96:  par, "\n", V, -
    97:  call, -, -, prints
    98:  jump, -, -, 99
    99:  <>, number, limit, 101
   100:  jump, -, -, 115
   101:  +, number, 1, $8
   102:  par, $8, V, -
   103:  par, $9, RET, -
   104:  call, -, -, prime
   105:  ifb, $9, -, 107
   106:  jump, -, -, 115
   107:  +, counter, 1, $10
   108:  :=, $10, -, counter
   109:  +, number, 1, $11
   110:  par, $11, V, -
   111:  call, -, -, printi
   112:  par, "\n", V, -
   113:  call, -, -, prints
   114:  jump, -, -, 115
   115:  +, number, 6, $12
   116:  :=, $12, -, number
   117:  jump, -, -, 83
   118:  par, "\nTotal: ", V, -
   119:  call, -, -, prints
   120:  par, counter, V, -
   121:  call, -, -, printi
   122:  par, "\n", V, -
   123:  call, -, -, prints
   124:  endu, _main, -, -

